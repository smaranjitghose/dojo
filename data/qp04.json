{

  "title": "MongoDB and Versoin Control Systems",
  "date": "3rd February 2025",
  "mcqs": [
    {
      "id": 1,
      "question": "How do you sort documents in descending order by age?",
      "code": null,
      "options": {
        "a": "db.users.find().sort({ age: 0 })",
        "b": "db.users.find().sort({ age: -1 })",
        "c": "db.users.find().sort({ age: 'desc' })",
        "d": "db.users.find().orderBy({ age: 'down' })"
      }
    },
    {
      "id": 2,
      "question": "What operator updates if document exists, inserts if not?",
      "code": null,
      "options": {
        "a": "$set",
        "b": "$update",
        "c": "$upsert",
        "d": "$setOrInsert"
      }
    },
    {
      "id": 3,
      "question": "Which operator matches values in an array?",
      "code": null,
      "options": {
        "a": "$array",
        "b": "$in",
        "c": "$contains",
        "d": "$has"
      }
    },
    {
      "id": 4,
      "question": "What tool is used to import JSON/CSV data?",
      "code": null,
      "options": {
        "a": "mongoimport",
        "b": "mongorestore",
        "c": "mongoload",
        "d": "mongofetch"
      }
    },
    {
      "id": 5,
      "question": "What is the minimum number of nodes needed for a replica set?",
      "code": null,
      "options": {
        "a": "1",
        "b": "2",
        "c": "3",
        "d": "4"
      }
    },
    {
      "id": 6,
      "question": "What is the maximum number of indexes per collection?",
      "code": null,
      "options": {
        "a": "32",
        "b": "64",
        "c": "128",
        "d": "256"
      }
    },
    {
      "id": 7,
      "question": "You need to temporarily switch tasks but aren't ready to commit. What should you do?",
      "code": null,
      "options": {
        "a": "Commit incomplete changes",
        "b": "Use git stash",
        "c": "Create a new branch",
        "d": "Copy files manually"
      }
    },
    {
      "id": 8,
      "question": "You need to modify your last commit message. What command should you use?",
      "code": null,
      "options": {
        "a": "git commit --amend",
        "b": "git modify",
        "c": "git message",
        "d": "git update"
      }
    },
    {
      "id": 9,
      "question": "You accidentally committed to main branch instead of feature branch. What's the best action?",
      "code": null,
      "options": {
        "a": "Delete the repository and clone again",
        "b": "Create a new branch from the current state",
        "c": "git reset to move commit to correct branch",
        "d": "Ignore it and continue working"
      }
    },
    {
      "id": 10,
      "question": "What's the purpose of SSH keys in Git?",
      "code": null,
      "options": {
        "a": "Encrypt commits",
        "b": "Secure authentication with remote",
        "c": "Encrypt repository",
        "d": "Sign commits"
      }
    }
  ],
  "shortQuestions": [
    {
      "id": 1,
      "question": "What is a capped collection in MongoDB? Explain with example"
    },
    {
      "id": 2,
      "question": "Explain the concept of Sharding in MongoDB? List the different sharding strategies."
    },
    {
      "id": 3,
      "question": "Discuss about different types of indexes in MongoDB using code examples"
    },
    {
      "id": 4,
      "question": "What are embedded documents in MongoDB? Give an example"
    },
    {
      "id": 5,
      "question": "What is a Git tag? Explain the difference between lightweight and annotated tags."
    },
    {
      "id": 6,
      "question": "What is Git Reflog? How is it different from git reset?"
    },
    {
      "id": 7,
      "question": "Explain the difference between git rebase and git merge"
    }
  ],
  "longQuestions": [
    {
      "id": 1,
      "question": "You are working with a MongoDB database called social_media with collections posts, users, and comments. Perform the following tasks:",
      "subparts": [
        "Insert five documents into the posts collection with fields: content (string), author (string), likes (number), tags (array of strings), createdAt (date)",
        "Find all posts containing the tag \"technology\" and sort by likes in descending order",
        "Update all posts with more than 100 likes by adding a field trending set to true",
        "Calculate the average number of likes per author",
        "Delete all posts older than 30 days"
      ]
    },
    {
      "id": 2,
      "question": "You are working with a MongoDB database called blog that contains the collections articles, authors, and comments. Perform the following tasks:",
      "subparts": [
        "Insert five documents into the articles collection with fields: title (string), content (string), author (string), tags (array of strings), createdAt (date)",
        "Create a text index on the title and content fields of the articles collection",
        "Find all articles containing the word \"JavaScript\" in either the title or content fields, sorted by createdAt in descending order",
        "Update all articles containing the word \"database\" in the content field by adding a new field category with the value \"Database\"",
        "Delete all articles that do not contain any tags"
      ]
    },
    {
      "id": 3,
      "question": "Imagine you are working on the clone of an open-source project in your local system. How will you achieve the following tasks using Git CLI commands:",
      "subparts": [
        "Set remotes for your forked remote (origin) and the upstream remote (upstream)",
        "Fetch all feature branches from the upstream remote",
        "Create a feature branch feat6 linked to upstream/feat6",
        "Stage and commit a change with the message \"Completed Task 6\" on the feat6 branch",
        "Push the feat6 branch to your forked remote"
      ]
    },
    {
      "id": 4,
      "question": "Imagine you are working on a feature branch and want to clean up your commit history by squashing multiple commits into one. How will you achieve the following tasks using Git CLI commands:",
      "subparts": [
        "View the commit history to identify the commits to squash",
        "Start an interactive rebase for the last 4 commits",
        "Squash the last 3 commits into the first commit, keeping the first commit's message",
        "Force-push the squashed branch to the remote repository",
        "Verify the commit history after squashing"
      ]
    }
  ]
}